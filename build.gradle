// ori buildscript {
// ori 	ext {
// ori 		springBootVersion = '2.1.0.RELEASE'
// ori 	}
// ori 	repositories {
// ori 		mavenCentral()
// ori 		maven { url "https://repo.spring.io/snapshot" }
// ori 		maven { url "https://repo.spring.io/milestone" }
// ori 	}
// ori 	dependencies {
// ori 		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
// ori 	}
// ori }



plugins {
	id 'java'
	id 'eclipse'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
}
// ori apply plugin: 'java'
// ori apply plugin: 'eclipse'
// ori apply plugin: 'org.springframework.boot'
// ori apply plugin: 'io.spring.dependency-management'
// ori apply plugin: 'jacoco'

version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = '17'
}
// ori sourceCompatibility = 1.8

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


// ori dependencies {
// ori 	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
// ori 	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
// ori 	compile('org.springframework.boot:spring-boot-starter-web')
// ori 	runtime('org.springframework.boot:spring-boot-devtools')
// ori 	compile 'org.webjars:bootstrap:3.3.7-1'
// ori 	compileOnly('org.projectlombok:lombok')
// ori 	testCompile('org.springframework.boot:spring-boot-starter-test')
// ori }
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mongodb'
}


//export test coverage
jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.required = false
	}
}

